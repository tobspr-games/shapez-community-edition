#state_SettingsState {
    $colorCategoryButton: #eeeff5;
    $colorCategoryButtonSelected: $colorBlueBright;

    $layoutBreak: 1000px;

    .container .content {
        display: grid;
        grid-template-columns: auto 1fr;
        grid-gap: 1rem;

        @include StyleBelowWidth($layoutBreak) {
            grid-template-columns: 1fr;
            grid-template-rows: auto 1fr;
        }

        .sidebar {
            display: flex;
            min-width: 21rem;
            max-width: 32rem;
            flex-direction: column;

            @include StyleBelowWidth($layoutBreak) {
                display: grid;
                grid-template-columns: 1fr 1fr 1fr;
                grid-gap: 0.5rem;
                max-width: unset !important;
            }

            button {
                text-align: left;
                margin-bottom: 0.3rem;
                &::after {
                    content: unset;
                }
                width: 100%;
                box-sizing: border-box;

                @include StyleBelowWidth($layoutBreak) {
                    text-align: center;
                    height: 3rem !important;
                    padding: 0.5rem !important;
                }
            }

            .other {
                align-self: end;
                margin-top: auto;

                &.noabout {
                    align-self: start;
                }

                @include StyleBelowWidth($layoutBreak) {
                    margin-top: 0;
                    display: grid;
                    grid-template-columns: 1fr 1fr;
                    grid-gap: 0.5rem;
                    max-width: unset !important;
                    grid-column: 1 / 3;

                    button {
                        margin: 0 !important;
                    }
                }
            }

            button.categoryButton,
            button.about,
            button.privacy {
                background-color: $colorCategoryButton;
                color: #777a7f;

                &.active {
                    background-color: $colorCategoryButtonSelected;
                    color: #fff;

                    &:hover {
                        opacity: 1;
                    }
                }

                &.pressed {
                    transform: none !important;
                }
            }

            .versionbar {
                margin-top: 1rem;

                @include StyleBelowWidth($layoutBreak) {
                    display: none;
                }

                @include SuperSmallText;
                display: grid;
                align-items: center;
                grid-template-columns: 1fr auto;
                .buildVersion {
                    display: flex;
                    flex-direction: column;
                    color: #aaadaf;
                }
            }
        }

        .categoryContainer {
            overflow-y: scroll;
            pointer-events: all;
            padding-right: 1rem;

            .category {
                display: none;

                &.active {
                    display: block;
                }

                .setting {
                    padding: 1rem;
                    background: #eeeff5;
                    border-radius: $globalBorderRadius;
                    margin-bottom: 0.5rem;

                    .desc {
                        margin-top: 0.5rem;
                        @include SuperSmallText;
                        color: #aaadb2;
                    }

                    > .row {
                        display: grid;
                        align-items: center;
                        grid-template-columns: 1fr auto;

                        > label {
                            text-transform: uppercase;
                            @include Text;
                        }
                    }

                    &.disabled {
                        // opacity: 0.3;
                        pointer-events: none;
                        * {
                            pointer-events: none !important;
                            cursor: default !important;
                        }
                        position: relative;
                        .standaloneOnlyHint {
                            @include PlainText;
                            position: absolute;
                            top: 0;
                            left: 0;
                            right: 0;
                            bottom: 0;
                            pointer-events: all;
                            display: flex;
                            align-items: center;
                            z-index: 100;
                            justify-content: center;
                            background: rgba(#fff, 0.5);
                            text-transform: uppercase;
                            color: $colorRedBright;
                            border-radius: $globalBorderRadius;

                            @include DarkThemeOverride {
                                background: rgba(#55585f, 0.95);
                            }
                        }
                    }

                    .value.enum {
                        background: #fff;
                        @include PlainText;
                        display: flex;
                        align-items: flex-start;
                        pointer-events: all;
                        cursor: pointer;
                        justify-content: center;
                        min-width: 10rem;
                        border-radius: $globalBorderRadius;
                        padding: 0.4rem;
                        padding-right: 1.5rem;

                        & {
                            background: #fff uiResource("icons/enum_selector.png") calc(100% - 0.5rem)
                                calc(50% + 0.1rem) / 1.5rem no-repeat;
                        }

                        transition: background-color 0.12s ease-in-out;
                        &:hover {
                            background-color: #fafafa;
                        }
                    }
                }
            }
        }
    }

    @include DarkThemeOverride {
        .container .content {
            .sidebar {
                button.categoryButton,
                button.about,
                button.privacy {
                    color: #ccc;
                    background-color: darken($darkModeControlsBackground, 5);

                    &.active {
                        color: #fff;
                        background-color: $colorCategoryButtonSelected;
                    }
                }
            }

            .categoryContainer {
                .category {
                    .setting {
                        background: darken($darkModeGameBackground, 10);

                        .value.enum {
                            // dirty but works
                            // color: #222;
                            background-color: $darkModeControlsBackground;

                            & {
                                background-image: uiResource("icons/enum_selector_white.png");
                            }
                            color: #ddd;
                            &:hover {
                                background-color: darken($darkModeControlsBackground, 2);
                            }
                        }

                        .value.checkbox {
                            background-color: #74767b;

                            &.checked {
                                background-color: $colorBlueBright;
                            }
                        }
                    }
                }
            }
        }
    }
}
