.ingameDialog {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: all;
    background: $modalDialogBg;

    display: flex;
    align-items: center;
    justify-content: center;

    @include InlineAnimation(0.12s ease-in-out) {
        0% {
            background-color: transparent;
            opacity: 0.5;
        }
        100% {
            background-color: $modalDialogBg;
        }
    }

    $darkModeDialogBg: darken($darkModeGameBackground, 5);

    @include DarkThemeOverride {
        background: rgba($darkModeDialogBg, 0.9);
        @include InlineAnimation(0.12s ease-in-out) {
            0% {
                background-color: transparent;
                opacity: 0.5;
            }
            100% {
                background-color: rgba($darkModeDialogBg, 0.9);
            }
        }

        > .dialogInner.optionChooserDialog .optionParent {
            .option {
                background: $darkModeControlsBackground;

                &:hover {
                    background-color: lighten($darkModeControlsBackground, 5);
                }

                &.active {
                    background: $colorBlueBright;
                    color: #fff;
                }
            }
        }
    }

    &.visible {
        .dialogInner {
            opacity: 1;
        }
        backdrop-filter: blur(0.3rem);
    }

    .dialogInner {
        transition: opacity 0.2s ease-in-out;
        opacity: 0;
    }

    &.loadingDialog {
        * {
            color: #fff;
        }

        display: flex;
        flex-direction: column;

        .text {
            text-transform: uppercase;
            margin-bottom: 1rem;
        }
    }

    > .dialogInner {
        background: #fff;
        max-height: calc(100vh - 4rem);
        border-radius: $globalBorderRadius;
        display: flex;
        flex-direction: column;
        padding: 1.2rem;

        box-shadow: 0 0.5rem 1.5rem rgba(#000, 0.1);
        pointer-events: all;

        @include DarkThemeOverride {
            background: darken($darkModeControlsBackground, 5);
        }

        &.optionChooserDialog {
            .optionParent {
                display: grid;
                grid-gap: 0.5rem;
                padding-right: 0.5rem;
                grid-template-columns: 1fr 1fr;
                .option {
                    border-radius: $globalBorderRadius;

                    pointer-events: all;
                    cursor: pointer;
                    padding: 1rem;

                    background: #eee;

                    transition: background-color 0.12s ease-in-out;

                    &:hover {
                        background-color: #e7e7e7;
                    }

                    &.active {
                        background-color: $colorBlueBright;
                        color: #fff;
                    }
                }
            }
        }

        > .title {
            @include Heading;
            margin: 0;
            text-transform: uppercase;
            display: grid;
            align-items: center;
            grid-template-columns: 1fr auto;
            margin-bottom: 1rem;

            @include DarkThemeInvert();
            > .closeButton {
                opacity: 0.7;
                width: 2rem;
                height: 2rem;
                cursor: pointer;
                pointer-events: all;
                transition: opacity 0.2s ease-in-out;
                &:hover {
                    opacity: 0.4;
                }
                & {
                    background: uiResource("icons/close.png") center center / 80% no-repeat;
                }
            }
        }

        > .content {
            @include PlainText;
            overflow-y: auto;
            pointer-events: all;
            width: 35rem;

            @include DarkThemeOverride {
                color: #aaa;
            }

            a {
                color: $colorBlueBright;
            }

            strong {
                font-weight: bold;
            }

            // FIXME: Translations are still using code.keybinding instead of kbd
            kbd,
            .keybinding {
                position: relative;
                background: #eee;
                @include PlainText;
                height: unset;
                margin: 1px 0;
            }

            h3 {
                margin-top: 1rem;
            }

            input {
                background: #eee;
                color: #333438;
                width: 100%;

                &.errored {
                    background-color: rgb(250, 206, 206);

                    &::placeholder {
                        color: #fff;
                        opacity: 0.8;
                    }
                }
            }

            .ingameItemChooser {
                margin: 1rem 0;
                display: grid;
                grid-column-gap: 0.3rem;
                grid-row-gap: 0.5rem;
                grid-template-columns: repeat(10, 1fr);
                place-items: center;

                canvas {
                    pointer-events: all;
                    width: 2.5rem;
                    height: 2.5rem;
                    position: relative;
                    cursor: pointer;

                    &:hover {
                        opacity: 0.9;
                    }
                }
            }

            .dialogModsMod {
                background: rgba(0, 0, 0, 0.05);
                padding: 0.5rem;
                margin: 1rem 0;
                border-radius: $globalBorderRadius;
                display: grid;
                grid-template-columns: 1fr 10rem;

                @include DarkThemeOverride {
                    background: rgba(0, 0, 0, 0.2);
                }

                button {
                    grid-column: 2 / 3;
                    grid-row: 1 / 3;
                    align-self: start;
                }

                .version {
                    @include SuperSmallText;
                    opacity: 0.5;
                }
            }
        }

        > .buttons {
            margin-top: 1.5rem;
            display: flex;
            justify-content: flex-end;
            > button {
                margin-left: 0.8rem;
                @include Text;
                min-width: 6rem;
                padding: 0.5rem 1.5rem;

                transition: opacity 0.12s ease-in-out;
                &:hover {
                    opacity: 0.9;
                }

                &.good {
                    background-color: $colorGreenBright;
                    color: #fff;
                }

                &.bad {
                    background-color: $colorRedBright;
                    color: #fff;
                }

                &.timedButton {
                    pointer-events: none;
                    cursor: default;
                    position: relative;
                    overflow: hidden;
                    &::after {
                        position: absolute;
                        top: 0;
                        right: 0;
                        bottom: 0;
                        left: unset;
                        z-index: 5;
                        content: " ";
                        display: inline-block;
                        background: rgba(#fff, 0.6);
                        @include InlineAnimation(1s linear) {
                            0% {
                                width: 100%;
                            }
                            100% {
                                width: 0%;
                            }
                        }
                    }
                }
            }
        }
    }
}
