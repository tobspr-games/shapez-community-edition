{
    "compilerOptions": {
        /* Basic Options */
        "target": "es2017" /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019' or 'ESNEXT'. */,
        "module": "ESNext" /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */,
        "lib": [
            "DOM",
            "DOM.Iterable",
            "ESNext"
        ] /* Specify library files to be included in the compilation. */,
        "allowJs": true /* Allow javascript files to be compiled. */,
        "checkJs": true /* Report errors in .js files. */,

        /*
            Without this, tsc complains that all the js inputs would overwrite themselves after being compiled
            However, we are using webpack to compile things, so the default tsc output is never written to disk,
            instead it is emitted into the webpack bundle. Nothing is actually going to be written to ../../build,
            but TSC thinks it is, which avoids these overwrite errors.
        */
        "outDir": "../../build_output" /* Redirect output structure to the directory. */,

        /* Strict Type-Checking Options */
        "strictFunctionTypes": true /* Enable strict checking of function types. */,
        "strictBindCallApply": true /* Enable strict 'bind', 'call', and 'apply' methods on functions. */,
        "noImplicitThis": true /* Raise error on 'this' expressions with an implied 'any' type. */,
        "alwaysStrict": true /* Parse in strict mode and emit "use strict" for each source file. */,

        /* Additional Checks */
        "noFallthroughCasesInSwitch": true /* Report errors for fallthrough cases in switch statement. */,

        /* Module Resolution Options */
        "moduleResolution": "node" /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "paths": {
            "root/*": ["./*"]
        },

        /* JSX Compilation */
        "jsx": "react-jsx",
        "jsxImportSource": "root",

        /* Experimental Options */
        "resolveJsonModule": true,
        "skipLibCheck": true,
        "skipDefaultLibCheck": true
    },
    "include": ["./**/*.js", "./**/*.ts", "./**/*.jsx", "./**/*.tsx"],
    "exclude": ["webworkers", "node_modules"]
}
